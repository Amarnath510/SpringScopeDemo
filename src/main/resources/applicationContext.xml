<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	
	<context:component-scan base-package="com.amarnath" />
	
	<!-- No scope is defined here. So by default the scope is Singleton. 
		 So any class calling getBean("studentBean") then the same bean will be returned.
		 So same data will be present for all the objects.
	-->
	<bean id="studentBean" class="com.amarnath.springscopedemo.Student" />

	<!-- Same object will be return to all the objects that are calling 
		 getBean("anotherStudentBean").
	<bean id="anotherStudentBean" class="com.amarnath.springscopedemo.Student" />
	-->
	
	<!-- Prototype Scope -->
	<bean id="prototypeCourse" class="com.amarnath.springscopedemo.Course" scope="prototype"/>
	
</beans>	
	